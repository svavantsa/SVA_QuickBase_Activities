<Activity mc:Ignorable="sap sap2010" x:Class="AddRecord" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="qbDomain" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="qbAppTokenCredential" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="qbUserTokenCredential" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="qbDBID" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="dictFIDContent" Type="InArgument(scg:Dictionary(x:String, x:Object))">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="StatusCode" Type="OutArgument(x:Int32)" />
    <x:Property Name="errCode" Type="OutArgument(x:Int32)" />
    <x:Property Name="HttpResult" Type="OutArgument(x:String)" />
    <x:Property Name="rid" Type="OutArgument(x:Int32)" />
    <x:Property Name="errdetail" Type="OutArgument(x:String)" />
    <x:Property Name="errtext" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>802,1754</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AddRecord_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This activity uses the API_AddRecord QuickBase API Call to add a record to an existing table in QuickBase. It returns the rid, errtext and errdetail as outputs.&#xA;Input Parameters:&#xA;1.QuickBase Domain (the part between https: and .quickbase.com)&#xA;2.AppTokenCredential name for this to get the App Token from Orchestrator&#xA;3. UserTokenCredential name to get from the orchestrator of a user who has read access to the table mentioned in the dbid below:&#xA;4. DBID for the table from which you want to read data&#xA;5. Dictionary object of String and Object, where the string is the FID of the field and the Object has the value for that FID.&#xA;&#xA;Output. &#xA;1. Status Code from the HTTP Call: 200 is success for example.&#xA;2. rid: The Record of the newly created record. If it already exists, this will be 0 and the below output parameters would have the error details.&#xA;3. errcode, errtext, errdetail and httpresult: These are the output parameters present in the XML output. See QuickBase HTTP Calls documentation for details. This activity merely returns the values of those tags." DisplayName="AddRecord" sap:VirtualizedContainerService.HintSize="737,1689" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="qbEndPointURL" />
      <Variable x:TypeArguments="x:String" Name="qbBody" />
      <Variable x:TypeArguments="x:String" Name="qbFIDValueBody" />
      <Variable x:TypeArguments="ss:SecureString" Name="qbAppToken" />
      <Variable x:TypeArguments="ss:SecureString" Name="qbUserToken" />
      <Variable x:TypeArguments="sxl:XDocument" Name="xmlResult" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PrepareForAPICall workflow" sap:VirtualizedContainerService.HintSize="695,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="PrepareForAPICall.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_qbDBID">[qbDBID]</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dictFIDContent">[dictFIDContent]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_qbDomain">[qbDomain]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_qbFIDValueBody">[qbFIDValueBody]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_qbEndPointURL">[qbEndPointURL]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="695,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,365.5" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Compose EndPointUrl" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[qbEndPointURL]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["https://" + qbDomain + ".quickbase.com"+ "/db/" + qbDBID]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[qbFIDValueBody]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Sequence DisplayName="Compose qbFIDValueBody" sap:VirtualizedContainerService.HintSize="262,69.5" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="340.666666666667,292.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[dictFIDContent]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:Object)">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,154" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[qbFIDValueBody]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[qbFIDValueBody +"&lt;field fid='"+item.Key+"'&gt;"+item.Value.ToString+"&lt;/field&gt;"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[qbAppTokenCredential]" DisplayName="Private: Get AppToken Credential" sap:VirtualizedContainerService.HintSize="340.666666666667,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[qbAppToken]" />
            <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[qbUserTokenCredential]" DisplayName="Private: Get UserToken Credential" sap:VirtualizedContainerService.HintSize="340.666666666667,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[qbUserToken]" />
            <Assign DisplayName="Private: Assign" sap:VirtualizedContainerService.HintSize="340.666666666667,65.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[qbBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;qdbapi&gt;" +
"&lt;udata&gt;mydata&lt;/udata&gt;" +
"&lt;apptoken&gt;" + New System.Net.NetworkCredential(String.Empty, qbAppToken).Password + "&lt;/apptoken&gt;" +
"&lt;usertoken&gt;" + New System.Net.NetworkCredential(String.Empty, qbUserToken).Password + "&lt;/usertoken&gt;"+
qbFIDValueBody +
"&lt;/qdbapi&gt;"]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[qbAppTokenCredential]" DisplayName="Private: Get AppToken Credential" sap:VirtualizedContainerService.HintSize="695,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_3" Password="[qbAppToken]" />
    <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[qbUserTokenCredential]" DisplayName="Private: Get UserToken Credential" sap:VirtualizedContainerService.HintSize="695,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_4" Password="[qbUserToken]" />
    <Assign DisplayName="Private: Assign" sap:VirtualizedContainerService.HintSize="695,64" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[qbBody]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;qdbapi&gt;" +
"&lt;udata&gt;mydata&lt;/udata&gt;" +
"&lt;apptoken&gt;" + New System.Net.NetworkCredential(String.Empty, qbAppToken).Password + "&lt;/apptoken&gt;" +
"&lt;usertoken&gt;" + New System.Net.NetworkCredential(String.Empty, qbUserToken).Password + "&lt;/usertoken&gt;"+
qbFIDValueBody +
"&lt;/qdbapi&gt;"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Username="{x:Null}" AcceptFormat="XML" Body="[qbBody]" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request To Add Transaction" EndPoint="[qbEndPointURL]" sap:VirtualizedContainerService.HintSize="695,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[HttpResult]" StatusCode="[StatusCode]" TimeoutMS="6000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Cookies>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Cookies>
      <ui:HttpClient.Headers>
        <InArgument x:TypeArguments="x:String" x:Key="QUICKBASE-ACTION">API_AddRecord</InArgument>
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Parameters>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
    </ui:HttpClient>
    <Sequence DisplayName="Return QB errCode and errText" sap:VirtualizedContainerService.HintSize="695,794" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <Sequence.Variables>
        <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultAsXDoc" />
        <Variable x:TypeArguments="x:String" Name="variable1" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:DeserializeXml DisplayName="Deserialize XML" sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="DeserializeXml_2" XMLDocument="[xmlResultAsXDoc]" XMLString="[HttpResult]" />
      <Assign DisplayName="Get errcode to return" sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[errCode]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[Cint(xmlResultAsXDoc.Element("qdbapi").Element("errcode").Value)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Get errtext to return" sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[errtext]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[xmlResultAsXDoc.Element("qdbapi").Element("errtext").Value]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[errCode=0]" sap:VirtualizedContainerService.HintSize="653,402" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Sequence DisplayName="Add Successful" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Get rid to return (of the new record added)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[rid]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Cint(xmlResultAsXDoc.Element("qdbapi").Element("rid").Value)]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Add Failed" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[rid]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[vbNull]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[errdetail]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[xmlResultAsXDoc.Element("qdbapi").Element("errdetail").Value]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>